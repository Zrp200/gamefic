#!/usr/bin/env ruby

$LOAD_PATH.unshift File.dirname(__FILE__) + "/lib"
require 'gamefic'
require 'gamefic/engine/cgi'
require 'gamefic/build'
require 'getoptlong'
include Gamefic

opts = GetoptLong.new(
  [ '-d', '--dev', GetoptLong::NO_ARGUMENT ]
)
dev = false
begin
  opts.each { |opt, arg|
    case opt
      when '-d'
        dev = true
    end
  }
rescue Exception => e
  puts "#{e}"
  exit 1
end

begin
  path = "#{ARGV[0]}"
  build_file = nil
  test_file = nil
  config = nil
  if dev and File.file?(path + '/build.rb')
    build_file = path + '/build.rb'
  end
  if dev and File.file?(path + '/test.rb')
    test_file = path + '/test.rb'
  end
  config = Build.load build_file
  config.import_paths.unshift path + '/import'
  config.import_paths.each_index { |i|
  if config.import_paths[i][0,1] != '/'
    config.import_paths[i] = path + '/' + config.import_paths[i]
  end
  }
  file = "#{ARGV[0]}/main.rb"
  config.import_paths.push Gamefic::GLOBAL_IMPORT_PATH
  plot = Plot.new config
  plot.load file
  if ARGV[1] != "new"
    savename = ARGV[1]
  else
    savename = ARGV[2]
  end
  engine = Cgi::Engine.new plot, :session_file => savename
  engine.begin_session
  json = engine.run
  engine.end_session
  if engine.user.character.state.kind_of?(CharacterState::Concluded)
    File.delete savename
  end
  puts json
rescue Exception => e
  response = Hash.new
  response[:error] = e.message
  response[:backtrace] = e.backtrace
  puts JSON.generate(response)
end
